name: Build, Lint, e2e & ct test
on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        uses: cypress-io/github-action@v5.0.8
        with:
          runTests: false
      # - name: Reset coverage (Coverage_step1)
      # reset state at the beginning for new unit + e2e coverage evaluation
      # run: yarn cov:reset

  unit-test:
    needs: [install-dependencies]
    name: Run Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        uses: cypress-io/github-action@v5.0.8
        with:
          runTests: false
      - name: unit-test
        run: yarn test

      - name: Upload artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: coverage
          path: coverage/
          retention-days: 1
      - name: âœ… Upload Jest coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: coverage/
          flags: unit-test-coverage
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    needs: install-dependencies
    name: Run Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        uses: cypress-io/github-action@v5.0.8
        with:
          runTests: false
      - name: lint
        run: yarn lint

  cypress-e2e-test:
    strategy:
      fail-fast: false
      matrix:
        machines: [1, 2]
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Specific Chrome Version
        run: |
          sudo apt-get install -y wget
          sudo wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install ./google-chrome-stable_current_amd64.deb

      - name: Cypress e2e tests ðŸ§ª
        uses: cypress-io/github-action@v5.0.8
        with:
          start: yarn dev # concurrently starts ui and api servers
          wait-on: 'http://localhost:3000'
          browser: chrome
          record: true
          parallel: true
          group: e2e-tests
          tag: e2e-tests
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          LAUNCH_DARKLY_PROJECT_KEY: ${{ secrets.LAUNCH_DARKLY_PROJECT_KEY }}
          LAUNCH_DARKLY_AUTH_TOKEN: ${{ secrets.LAUNCH_DARKLY_AUTH_TOKEN }}
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Copy the coverage to coverage-part (Coverage_step2)
      # Copy the e2e coverage for the job to coverage-part folder.
      # Similar to copy:reports script, but instead of "reports" we have an intermediate folder "coverage-part"
      # This is useful for e2e + ct, or parallelized jobs.
      # We call the file parallel-job* since, theoretically, ct and e2e also run in parallel.
      # For the suffix, use unique job id to avoid overwriting the file if multiple jobs run in parallel for e2e or ct.
      # run: (mkdir coverage-part || true) && cp coverage-cy/coverage-final.json coverage-part/$GITHUB_JOB-$GITHUB_RUN_ID.json
      # test short name
      # run: (mkdir coverage-part || true) && cp coverage-cy/coverage-final.json coverage-part/coverage-final-e2e.json

      - name: Upload artifacts (Coverage_step3)
        uses: actions/upload-artifact@v3.1.2
        with:
          name: coverage-cy-e2e
          path: coverage-cy/
          retention-days: 1

      - name: âœ… Upload e2e coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: coverage-cy/
          flags: cypress-e2e-coverage
          token: ${{ secrets.CODECOV_TOKEN }}

  # This is just a copy of the above with 2 additional args for visual testing
  cypress-percy-visual-tests:
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cypress visual tests ðŸ§ª
        uses: cypress-io/github-action@v5.0.8
        with:
          start: yarn dev # concurrently starts ui and api servers
          wait-on: 'http://localhost:3000'
          browser: chrome
          command: yarn percy exec -- cypress run --e2e --spec 'cypress/e2e/ui-integration/user-context-retainment.spec.js' --config video=false,screenshotOnRunFailure=false
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cypress-ct-test:
    strategy:
      fail-fast: false
      matrix:
        machines: [1, 2]
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Specific Chrome Version
        run: |
          sudo apt-get install -y wget
          sudo wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install ./google-chrome-stable_current_amd64.deb

      - name: Cypress component tests ðŸ§ª
        uses: cypress-io/github-action@v5.0.8
        with:
          component: true
          browser: chrome
          record: true
          parallel: true
          group: ct-tests
          tag: ct-tests

        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Copy the coverage to coverage-part (Coverage_step2)
      # Same as the e2e job, but for component tests.
      # run: (mkdir coverage-part || true) && cp coverage-cy/coverage-final.json coverage-part/$GITHUB_JOB-$GITHUB_RUN_ID.json
      # test short name
      # run: (mkdir coverage-part || true) && cp coverage-cy/coverage-final.json coverage-part/coverage-final-ct.json

      - name: Upload artifacts (Coverage_step3)
        uses: actions/upload-artifact@v3.1.2
        with:
          name: coverage-cy-ct
          path: coverage-cy/
          retention-days: 1

      - name: âœ… Upload CT coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: coverage-cy/
          flags: cypress-ct-coverage
          token: ${{ secrets.CODECOV_TOKEN }}

  download-artifacts:
    # needs: [unit-test, cypress-e2e-test, cypress-ct-test]
    needs: [cypress-e2e-test, cypress-ct-test]
    name: coverage artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        uses: cypress-io/github-action@v5.0.8
        with:
          runTests: false

      - name: Download all artifacts (Coverage_step3)
        uses: actions/download-artifact@v3
        with:
          path: coverage-artifacts/

      - name: Combine the coverage (Coverage_step4)
        run: |
          cd coverage-artifacts
          echo
          echo what is in coverage artifacts?
          ls -a

          echo
          echo Copy the coverage data to reports folder - like copy:reports
          mkdir reports || true
          cp coverage-cy-ct/coverage-final.json reports/from-ct.json
          cp coverage-cy-e2e/coverage-final.json reports/from-e2e.json
          echo
          echo current reports/ contents are:
          ls reports

          echo 
          echo mv reports folder to root
          mv reports ../
          cd ..
          echo
          echo show root folder contents
          ls -a

          echo
          echo merge all the files under reports folder into a nyc report - like combine:reports
          yarn nyc merge reports
          echo
          echo show folder contents
          ls -a
          echo show coverage.json, something should populate inside it
          cat coverage.json

          echo
          mkdir .nyc_output || true
          echo copy coverage.json to .nyc_output/out.json
          cp coverage.json .nyc_output/out.json

          echo
          test -f .nyc_output/out.json && echo ".nyc_output/out.json exists."
          ls -a
          echo
          echo finalize combined report
          yarn finalize:combined-report

      - name: Upload coverage files
        uses: actions/upload-artifact@v3.1.2
        with:
          name: coverage-artifacts, .nyc_output, coverage.json
          path: |
            coverage-artifacts/
            reports/
            .nyc_output/
            coverage.json
          retention-days: 1

  # skip jest copy for now
  # cp coverage/coverage-final.json reports/from-jest.json

  # cp -r coverage-*/. reports/
