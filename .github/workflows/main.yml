name: Build, Lint, e2e & ct test
on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: 16.10.0
      - uses: bahmutov/npm-install@v1.8.15
        with: { useRollingCache: true } # recommended for large projects
        env:
          CYPRESS_INSTALL_BINARY: 0 # no need to install the Cypress binary, we are already using the docker image in the e2e job

  lint:
    needs: install-dependencies
    name: Run Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1.8.15
        with: { useRollingCache: true }
        env:
          CYPRESS_INSTALL_BINARY: 0
      - name: lint
        run: yarn lint

  cypress-e2e-tests:
    # ran out od parallelization
    # strategy:
    #   matrix:
    #     machines: [1, 2]
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    container: cypress/included:9.4.1 # save time on not having to install cypress
    steps:
      - uses: actions/checkout@v3

      - uses: bahmutov/npm-install@v1.8.15 # save time on dependencies
        with: { useRollingCache: true }

      - name: Cypress e2e tests ðŸ§ª
        uses: cypress-io/github-action@v3.2.0
        with:
          install: false # no need to install because of the above 2
          start: yarn dev # concurrently starts ui and api servers
          wait-on: 'http://localhost:3000'
          browser: chrome
          # ran out of monthly Cypress Dashboard limit
          # record: true
          # parallel: true
          # group: e2e-tests
          # tag: e2e-tests
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          LAUNCH_DARKLY_PROJECT_KEY: ${{ secrets.LAUNCH_DARKLY_PROJECT_KEY }}
          LAUNCH_DARKLY_AUTH_TOKEN: ${{ secrets.LAUNCH_DARKLY_AUTH_TOKEN }}
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}

  # This is just a copy of the above with 2 additional args for visual testing
  cypress-percy-visual-tests:
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    container: cypress/included:9.4.1 # save time on not having to install cypress
    steps:
      - uses: actions/checkout@v3

      - uses: bahmutov/npm-install@v1.8.15 # save time on dependencies
        with: { useRollingCache: true }

      # We could also just add this step onto the original cypress-e2e-tests job
      - name: Cypress visual tests ðŸ§ª
        uses: cypress-io/github-action@v3.2.0
        with:
          install: false # no need to install because of the above 2
          start: yarn dev # concurrently starts ui and api servers
          wait-on: 'http://localhost:3000'
          browser: chrome
          command: yarn percy exec -- cypress run --spec 'cypress/integration/ui-integration/user-context-retainment.spec.js' --config video=false,screenshotOnRunFailure=false
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}

  cypress-component-tests:
    # ran out of parallelization
    # strategy:
    #   matrix:
    #     machines: [1, 2] # increase to 2 later: [1, 2]
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    container: cypress/included:9.4.1 # save time on not having to install cypress
    steps:
      - uses: actions/checkout@v3

      - uses: bahmutov/npm-install@v1.8.15 # save time on dependencies
        with: { useRollingCache: true }

      - name: Cypress component tests ðŸ§ª
        uses: cypress-io/github-action@v3.2.0
        with:
          # we have already installed everything
          install: false
          # to run component tests we need to use "cypress run-ct"
          # with component tests since we have a custom command, we pass these parameters in the command instead
          # command: yarn cypress run-ct --record --key=${{ secrets.CYPRESS_RECORD_KEY }} --parallel --browser chrome --group component-tests --tag component-tests --parallel 2
          # if you run out of parallelization, turn it off
          command: yarn cypress run-ct --browser chrome
        # env:
        # CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
